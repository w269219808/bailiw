# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'getTaobaoItem.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests
import re
import csv
import json
import datetime
from datetime import date,timedelta

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(570, 344)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setEnabled(True)
        self.textEdit.setGeometry(QtCore.QRect(40, 50, 256, 192))
        self.textEdit.setObjectName("textEdit")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(400, 100, 110, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 30, 84, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(400, 70, 42, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(400, 180, 94, 23))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 570, 17))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        #self.statusbar = self.statusBar()
        self.statusbar.showMessage('文件保存的目录在d:python/sycm',5000)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.getJson)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "请输入cookie："))
        self.label_2.setText(_translate("MainWindow", "宝贝id:"))
        self.pushButton.setText(_translate("MainWindow", "获取数据并保存"))
            
    def trans(self,html):
        datas = json.loads(html)
        if datas['code'] == 5810:
            return ''
        url = 'http://www.amingtool.com/getdata.php'
        head = {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Cache-Control': 'no-cache',
        'Connection': 'keep-alive',
        'Content-Length': '23',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'Cookie': 'Hm_lvt_9e811481d4b93d78ef0e62012807f1f7=1589437448,1589505884,1589592774,1589946853; Hm_lpvt_9e811481d4b93d78ef0e62012807f1f7=1589946853; Hm_lvt_459734649f53a7fd3b34ae4709c35060=1589437448,1589505884,1589592774,1589946853; Hm_lpvt_459734649f53a7fd3b34ae4709c35060=1589946853',
        'Host': 'www.amingtool.com',
        'Origin': 'http://www.amingtool.com',
        'Pragma': 'no-cache',
        'Referer': 'http://www.amingtool.com/trans',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36',
        'X-Requested-With': 'XMLHttpRequest'
        }
        payRateIndex = {'type': 'zfzhlzs', 'val[]': [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}
        uvIndex = {'type': 'llzs', 'val[]': [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}
        tradeIndex = {'type': 'jyzs', 'val[]': [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}
        payByrCntIndex = {'type': 'kqzs', 'val[]': [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}

        for i in range(len(datas['data']['payRateIndex'])):
            payRateIndex['val[]'][i] = datas['data']['payRateIndex'][i]
            uvIndex['val[]'][i] = datas['data']['uvIndex'][i]
            tradeIndex['val[]'][i] = datas['data']['tradeIndex'][i]
            payByrCntIndex['val[]'][i] = datas['data']['payByrCntIndex'][i]

        payRate = requests.post(url, data=payRateIndex, headers=head,verify=False)
        uv = requests.post(url, data=uvIndex, headers=head,verify=False)
        trade = requests.post(url, data=tradeIndex, headers=head,verify=False)
        payByrCnt = requests.post(url, data=payByrCntIndex, headers=head,verify=False)

        payRate = json.loads(payRate.text)   #将返回的json转换成字典， 然后读取就可以了
        uv = json.loads(uv.text) 
        trade = json.loads(trade.text) 
        payByrCnt = json.loads(payByrCnt.text) 

        t = datetime.date.today() - datetime.timedelta(days=31)
        index = []
        for i in range(len(payRate['data'])):

            t = t + datetime.timedelta(days=1)

            if(payByrCnt['data'][i]==0):
                kedanjia = 0
            else:
                kedanjia = trade['data'][i] / payByrCnt['data'][i]

            if uv['data'][i]==0:
                uvPrice = 0
            else:
                uvPrice = trade['data'][i] / uv['data'][i]
            index.append([t,payRate['data'][i],uv['data'][i],trade['data'][i],payByrCnt['data'][i],kedanjia,uvPrice])
            
        self.download(index)#通过索引下载数据

    def download(self,data):
        if data =="":
            print("cookies过期")
            self.statusbar.showMessage('cookies过期...')
            return
        self.statusbar.showMessage('正在保存商品信息...')

        path = 'D:/Python/sycm/{}.csv'.format(foodsId)
        try:
            f = open(path,"w",newline="",encoding='utf-8-sig')
            writer = csv.writer(f)
            writer.writerow(['日期','支付转化率','访客数','交易金额','付款人数','客单价','uv价值'])
            writer.writerows(data)
            self.statusbar.showMessage('已保存D:/Python/sycm/{}.csv'.format(foodsId),5000)
        except:
            self.statusbar.showMessage('保存失败...')
        f.close()

    def getJson(self):
            #name = 宝贝id
            if self.lineEdit.text()!='':
                name = self.lineEdit.text()
            else:
                self.statusbar.showMessage('请填写宝贝id:')
                return
            global foodsId
            foodsId = str(name)
            t = datetime.date.today() - datetime.timedelta(days=1)  #获取最近30天的数据
           # date = '2020-06-22'  #定义找查的截至时间
            start_url = 'https://sycm.taobao.com/flow/v3/monitor/item/trend.json?dateType=day&dateRange={}%7C{}&cateId=0&itemId={}&device=0&sellerType=-1'.format(t,t,name)

            header = {
                'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36'
            }
            #mycookies = cookies
            if self.textEdit.toPlainText() !="":
                mycookies = self.textEdit.toPlainText()
            else:
                self.statusbar.showMessage('没有填写cookies...')
                return
            mycookies = mycookies.split(';')
            cookies = {}
            for cookie in mycookies:
                name,value = cookie.strip().split('=',1)
                cookies[name] = value
            html = ''
            r = requests.get(start_url,headers=header,cookies=cookies,timeout=60)
            r.encoding = r.apparent_encoding
            html += r.text
            self.trans(html)



